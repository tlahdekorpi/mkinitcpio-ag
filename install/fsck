#!/bin/bash
build() {
	local f

	add <<-!
	c etc/fstab
	l ../proc/self/mounts etc/mtab

	?fr /etc/e2fsck.conf
	!

	(( fs_autodetect_failed )) && add <<-!
	gL /usr/sbin/fsck.*
	gL /usr/sbin/{btrfs,xfs_repair}
	!

	for f in "${fstypes[@]}"; do
		case "$f" in
		btrfs) add_binary '/usr/sbin/btrfs' ;;
		xfs) add_binary '/usr/sbin/xfs_repair' ;;
		esac

		if [[ ! -f "$_optrootfs/usr/sbin/fsck.$f" ]]; then
			warning "missing fsck helper: %s" "$f"
			continue
		fi
		add_binary "/usr/sbin/fsck.$f"
	done

	add_binary "/usr/sbin/fsck"
}

help() { cat <<!
This hook provides fsck and filesystem specific helpers to perform an fsck
operation on the root device prior to mounting. If the autodetect hook is used,
only the fsck helper specific to your filesystem will be added to the image. It
is highly recommended that if you include this hook that you also include any
necessary modules to ensure your keyboard will work in early userspace.

To control the behavior of fsck on bootup, fsck.mode=force can be passed on
the kernel command line to insist on running a full filesystem check. Similarly
fsck.mode=skip can be passed to cause fsck not to run at all.
!
}
