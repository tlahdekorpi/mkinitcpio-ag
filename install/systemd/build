#!/bin/bash
# systemd(1) as /init.
build() {
	local -a units

	run_build_hook busybox

	add_udev_rule \
		50-udev-default.rules \
		60-persistent-storage.rules \
		64-btrfs.rules \
		80-drivers.rules \
		99-systemd.rules

	units=(
		debug-shell.service

		kmod-static-nodes.service
		systemd-fsck@.service
		systemd-hibernate-resume@.service
		systemd-journald-audit.socket
		systemd-journald-dev-log.socket
		systemd-journald.service
		systemd-modules-load.service
		systemd-tmpfiles-setup-dev.service
		systemd-udev-trigger.service
		systemd-udevd-control.socket
		systemd-udevd-kernel.socket
		systemd-udevd.service
		systemd-volatile-root.service
		systemd-ask-password-console.path
		systemd-ask-password-console.service

		initrd-cleanup.service
		initrd-fs.target
		initrd-parse-etc.service
		initrd-root-device.target
		initrd-root-fs.target
		initrd-switch-root.service
		initrd-switch-root.target
		initrd-udevadm-cleanup-db.service
		initrd.target

		emergency.target
		local-fs-pre.target
		local-fs.target
		paths.target
		reboot.target
		rescue.target
		slices.target
		sockets.target
		swap.target
		timers.target
		cryptsetup.target
	)
	add_systemd_unit "${units[@]}"

	add_systemd_drop_in systemd-udevd.service resolve-names <<-!
	[Service]
	ExecStart=
	ExecStart=/usr/lib/systemd/systemd-udevd --resolve-names=never
	!

	add <<-!
	f $PWD/{break,sysroot}-generator usr/lib/systemd/system-generators 0755
	!
}
