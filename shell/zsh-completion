#compdef mkinitcpio
_find_kernel_versions() {
	local versions=({/usr,}/lib/modules/*)
	compadd ${(u)versions##*/}
}

_hooks() {
	local -a hooks=(/{etc,lib,usr/lib}/mkinitcpio/install/*)
	_values -s , 'hooks' ${(u)hooks##*/}
}

_arguments \
{-h,--help}'[Show this help text]' \
{-V,--version}'[Show package version]' \
{-a,--archive}'[Show image archive]' \
{-v,--verbose}'[Show verbose output]' \
{-d,--debug}'[Show debug output]' \
{-N,--nogen}'[Only run build hooks]' \
{-p,--path}'[Use PATH as config search path, PATH+ to prepend]:path:_files' \
{-g,--write}'[Write image to]:file:_files' \
{-f,--force}'[Ignore existing files]' \
{-c,--config}'[Use config]:file:_files' \
{-o,--hooks}'[Only run hooks]:hooks:_hooks' \
{-A,--addhooks}'[Append hooks]:hooks:_hooks' \
{-S,--skiphooks}'[Omit running hooks]:hooks:_hooks' \
{-H,--hookhelp}'[Show help for hook]:hooks:_hooks' \
{-L,--listhooks}'[Show all hooks]' \
{-n,--nocolor}'[Disable colorized output messages]' \
{-M,--automods}'[Show modules found by autodetect]' \
{-r,--moduleroot}'[Use dir as filesystem root for /lib/modules]' \
{-R,--rootfs}'[Use alternate system root]' \
{-s,--save}'[Save the build directory]' \
{-z,--compress}'[Compress image with program]' \
{-k,--kernel}'[Use kernel version]:versions:_find_kernel_versions' \
{-K,--kmod}'[Append kernel modules]' \
'-X[Variable used by archivegen]' \
'*:files:_files'
